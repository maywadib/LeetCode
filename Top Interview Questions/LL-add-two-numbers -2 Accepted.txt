'''
https://leetcode.com/problems/add-two-numbers/submissions/
'''


import math

# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    
    def addTwoNumbers(self, l1, l2):
        """
        :type l1: ListNode
        :type l2: ListNode
        :rtype: ListNode
        """
        
        headNode = None
        carryVal = 0
        while l1 is not None or l2 is not None:
            if headNode is None:
                sum = l1.val + l2.val + carryVal
                headNode = ListNode(int(sum % 10))
                sumList = headNode
                l1 = l1.next
                l2 = l2.next
                if math.floor(sum/10) == 0:
                    carryVal = 0
                else:
                    carryVal = math.floor(sum/10)
            else:
                if l1 is None:
                    sum = l2.val + carryVal
                    tempNode = ListNode(int((sum % 10)))
                    sumList.next = tempNode
                    sumList = tempNode
                    l2 = l2.next
                    if math.floor(sum/10) == 0:
                        carryVal = 0
                    else:
                        carryVal = math.floor(sum/10)
                elif l2 is None:
                    sum = l1.val + carryVal
                    tempNode = ListNode(int((sum % 10)))
                    sumList.next = tempNode
                    sumList = tempNode
                    l1 = l1.next
                    
                    if math.floor(sum/10) == 0:
                        carryVal = 0
                    else:
                        carryVal = math.floor(sum/10)
                else:
                    sum = l1.val + l2.val + carryVal
                    tempNode = ListNode(int((sum % 10)))
                    sumList.next = tempNode
                    sumList = tempNode
                    l1 = l1.next
                    l2 = l2.next
                    
                    if math.floor(sum/10) == 0:
                        carryVal = 0
                    else:
                        carryVal = math.floor(sum/10)
                    
        if carryVal != 0:
            tempNode = ListNode(int(carryVal))
            sumList.next = tempNode
            sumList = tempNode
   
        return headNode
    
        