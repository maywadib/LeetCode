'''
https://leetcode.com/problems/median-of-two-sorted-arrays/submissions/
'''

class Solution(object):
    def findMedianSortedArrays(self, nums1, nums2):
        """
        :type nums1: List[int]
        :type nums2: List[int]
        :rtype: float
        """        
        if not 0 <= len(nums1) <= 1000:
            return 0
        if not 0 <= len(nums2) <= 1000:
            return 0
        if not 1 <= len(nums1) + len(nums2) <= 2000:
            return 0
        
        final = []
        m = 0
        n = 0
        
        while n < len(nums2) and m < len(nums1):
            
            if nums1[m] < nums2[n]:
                final.append(nums1[m])
                m = m +1
            elif nums1[m] > nums2[n]:
                final.append(nums2[n])
                n = n + 1
            elif nums1[m] == nums2[n]:
                final.append(nums1[m])
                m = m + 1
                final.append(nums2[n])
                n = n + 1
            
        if n >= len(nums2):
            while m < len(nums1):
                final.append(nums1[m])
                m = m + 1
        if m >= len(nums1):
            while n < len(nums2):
                final.append(nums2[n])
                n = n + 1
                
        median = 0
        if (len(final) % 2) != 0:
            median = final[len(final)/2]
        else:
            median = float((final[(len(final)/2) -1] + final[len(final)/2])/2.0)
            
        return median
        